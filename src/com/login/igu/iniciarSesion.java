package com.login.igu;

import com.login.Encriptacion.contrasenaEncrip;
import com.login.logica.Usuario;
import com.login.persistencia.ControladoraPersistencia;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

public class iniciarSesion extends javax.swing.JFrame {

    int intentos;
    Controladora control;
    private boolean usuarioBloqueado = false;
    private Timer timer;
    private int segundosRestantes = 15;
    private contrasenaEncrip Cypher;

    public iniciarSesion() {
        initComponents();
        Cypher = new contrasenaEncrip();
        control = new Controladora();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnRegistro = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar Sesión");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Accesssystem_783.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Usuario:");

        txtUsuario.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Contraseña:");

        txtContrasena.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContrasenaActionPerformed(evt);
            }
        });
        txtContrasena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContrasenaKeyTyped(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/KeyChainAccess_37052.png"))); // NOI18N
        btnLogin.setText("Login");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        btnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLoginKeyPressed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/clean.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jSeparator1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        btnRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/thefreeforty_register_icon-icons.com_66338.png"))); // NOI18N
        btnRegistro.setText("Registro");
        btnRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/account_avatar_face_man_people_profile_user_icon_123197.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/lock-outlined-padlock-symbol-for-security-interface_icon-icons.com_57803.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegistro))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(17, 17, 17)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(23, 23, 23)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtUsuario.setText("");
        txtContrasena.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        String usuario = txtUsuario.getText();
        String contrasena = txtContrasena.getText();

        if (usuario.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, completa ambos campos", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Encripta la contraseña antes de verificar
        contrasenaEncrip encriptador = new contrasenaEncrip();
        String contrasenaEncriptada = encriptador.Encriptar(contrasena);

        if (usuarioBloqueado) {
            // Si el usuario está bloqueado, muestra un mensaje y sale del método
            JOptionPane.showMessageDialog(null, String.format("El usuario está bloqueado temporalmente. Intenta nuevamente después de %d segundos", segundosRestantes), "Usuario Bloqueado", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String mensaje = control.validarUsuario(usuario, contrasenaEncriptada);

        if (mensaje.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Usuario y Contraseña correctos, \nAcceso Concedido.", "Mensaje de Bienvenida", JOptionPane.INFORMATION_MESSAGE);
            datos frm = new datos();
            frm.setVisible(true);
            this.dispose(); // Cierra la ventana de inicio de sesión
        } else if (intentos == 3) {
            JOptionPane.showMessageDialog(null, "Has excedido el número de intentos para ingresar al sistema", "Verificar datos", JOptionPane.ERROR_MESSAGE);
            bloquearUsuarioTemporalmente();
        } else {
            JOptionPane.showMessageDialog(null, "Usuario o contraseña incorrecta intenta nuevamente \nQuedan " + (3 - intentos) + " intentos");
            txtUsuario.setText("");
            txtContrasena.setText("");
            txtUsuario.requestFocus();
            intentos = intentos + 1;
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void bloquearUsuarioTemporalmente() {
        usuarioBloqueado = true;
        segundosRestantes = 15;

        final JOptionPane optionPane = new JOptionPane(String.format("El usuario está bloqueado temporalmente. Intenta nuevamente después de %d segundos", segundosRestantes), JOptionPane.ERROR_MESSAGE);

        final JDialog dialog = optionPane.createDialog("Usuario Bloqueado");

        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    while (segundosRestantes > 0) {
                        Thread.sleep(1000); // Espera 1 segundo
                        segundosRestantes--;

                        // Actualiza el temporizador en JOptionPane sin cerrar el cuadro de diálogo actual
                        SwingUtilities.invokeLater(new Runnable() {
                            @Override
                            public void run() {
                                optionPane.setMessage(String.format("El usuario está bloqueado temporalmente. Intenta nuevamente después de %d segundos", segundosRestantes));
                            }
                        });
                    }
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                // Después de que el temporizador llega a cero, cierra la ventana del temporizador
                dialog.dispose();

                // Restablecer el estado del usuario bloqueado
                resetearEstadoUsuarioBloqueado();

                // Muestra un mensaje de desbloqueo
                JOptionPane.showMessageDialog(null, "El usuario está desbloqueado. Puedes intentar nuevamente.", "Usuario Desbloqueado", JOptionPane.INFORMATION_MESSAGE);
            }
        }).start();

        dialog.setVisible(true);
    }

    private void resetearEstadoUsuarioBloqueado() {
        usuarioBloqueado = false;
        segundosRestantes = 0;
    }

    private void actualizarTemporizadorJOptionPane() {
        JOptionPane.getRootFrame().dispose(); // Cierra el JOptionPane actual
        JOptionPane.showMessageDialog(null, String.format("El usuario está bloqueado temporalmente. Intenta nuevamente después de %d segundos", segundosRestantes), "Usuario Bloqueado", JOptionPane.ERROR_MESSAGE);
    }

    public class Controladora {

        ControladoraPersistencia controlPersis;

        public Controladora() {
            controlPersis = new ControladoraPersistencia();
        }

        public String validarUsuario(String usuario, String contrasena) {
            String mensaje = "";
            List<Usuario> listaUsuarios = controlPersis.traerUsuarios();
            boolean usuarioEncontrado = false;

            for (Usuario usu : listaUsuarios) {
                if ((usu.getNombreUsuario().equals(usuario) || usu.getCorreo().equals(usuario)) && usu.getContrasena().equals(contrasena)) {
                    usuarioEncontrado = true;
                    break;
                }
            }

            if (!usuarioEncontrado) {
                mensaje = "Usuario no encontrado";
            }

            return mensaje;
        }
    }

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        String usuario = txtUsuario.getText();
        String contrasena = txtContrasena.getText();
        // Obtener los datos a traves del campo de texto contraseña
        String pass = new String(txtContrasena.getPassword());
    }//GEN-LAST:event_btnLoginMouseClicked

    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed
        registro frm = new registro();
        frm.setVisible(true);
        this.dispose(); // Cierra la ventana de inicio de sesión
    }//GEN-LAST:event_btnRegistroActionPerformed

    private void btnLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLoginKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Llama al método para iniciar sesión aquí
            btnLoginActionPerformed(null);
        }
        btnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLoginKeyPressed(evt);
            }
        });
    }

    private void txtContrasenaKeyPressed(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Llama al método para iniciar sesión aquí
            btnLoginActionPerformed(null);
        }
    }//GEN-LAST:event_btnLoginKeyPressed

    private void txtContrasenaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContrasenaKeyTyped
        //Se asegura de capturar la tecla ENTER y descartar todas las demás
        char cTeclaPresionada = evt.getKeyChar();

        //Da clicl al boton de Login al detectar la tecla de ENTER
        if (cTeclaPresionada == KeyEvent.VK_ENTER) {
            btnLogin.doClick();
        }
    }//GEN-LAST:event_txtContrasenaKeyTyped

    private void txtContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContrasenaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
